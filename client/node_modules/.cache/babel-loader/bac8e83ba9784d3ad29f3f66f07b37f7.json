{"ast":null,"code":"var _jsxFileName = \"D:\\\\spm project\\\\currently editing one's\\\\e-commerce - Copy - from client cart\\\\client\\\\src\\\\api\\\\UserAPI.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false); // const [cart, setCart] = useState([])\n  //const [history, setHistory] = useState([])\n\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          }); //setIsLogged(true)\n          //   res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\n          //   setCart(res.data.cart)\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n  /* const addCart = async (product) => {\r\n       if(!isLogged) return alert(\"Please login to continue buying\")\r\n         const check = cart.every(item =>{\r\n           return item._id !== product._id\r\n       })\r\n         if(check){\r\n           setCart([...cart, {...product, quantity: 1}])\r\n             await axios.patch('/user/addcart', {cart: [...cart, {...product, quantity: 1}]}, {\r\n               headers: {Authorization: token}\r\n           })\r\n         }else{\r\n           alert(\"This product has been added to cart.\")\r\n       }\r\n   }\r\n     return {\r\n       isLogged: [isLogged, setIsLogged],\r\n       isAdmin: [isAdmin, setIsAdmin],\r\n       cart: [cart, setCart],\r\n       addCart: addCart,\r\n       history: [history, setHistory]\r\n   }\r\n  }\r\n  */\n}\n\n_s(UserAPI, \"/0VDIA3txUMwdUWA8vY9yR8e4Rg=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["D:/spm project/currently editing one's/e-commerce - Copy - from client cart/client/src/api/UserAPI.js"],"names":["useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","getUser","res","get","headers","Authorization","err","alert","response","data","msg"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC,CAFoB,CAGrB;AACC;;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACf,QAAGG,KAAH,EAAS;AACT,YAAMK,OAAO,GAAG,YAAW;AAC1B,YAAI;AAED,gBAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,aAAV,EAAyB;AAC1CC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAET;AAAhB;AADiC,WAAzB,CAAlB,CAFC,CAMW;AACH;AAEA;AAEA,SAXZ,CAWa,OAAOU,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaC,IAAb,CAAkBC,GAAnB,CAAL;AACH;AACJ,OAfT;;AAiBQT,MAAAA,OAAO;AAEV;AACJ,GAtBQ,EAsBP,CAACL,KAAD,CAtBO,CAAT;AAuBJ,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAOG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMC;;GAhEQD,O;;KAAAA,O;AAiET,eAAeA,OAAf","sourcesContent":["import {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction UserAPI(token) {\r\n    const [isLogged, setIsLogged] = useState(false)\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n   // const [cart, setCart] = useState([])\r\n    //const [history, setHistory] = useState([])\r\n\r\n    useEffect(() =>{\r\n    if(token){\r\n    const getUser = async () =>{\r\n     try {\r\n                    \r\n        const res = await axios.get('/user/infor', {\r\n         headers: {Authorization: token}\r\n  })\r\n\r\n                    //setIsLogged(true)\r\n                 //   res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\r\n\r\n                 //   setCart(res.data.cart)\r\n\r\n                } catch (err) {\r\n                    alert(err.response.data.msg)\r\n                }\r\n            }\r\n\r\n            getUser()\r\n            \r\n        }\r\n    },[token])\r\nreturn (\r\n    <div>\r\n       \r\n    </div>\r\n)\r\n    \r\n\r\n   /* const addCart = async (product) => {\r\n        if(!isLogged) return alert(\"Please login to continue buying\")\r\n\r\n        const check = cart.every(item =>{\r\n            return item._id !== product._id\r\n        })\r\n\r\n        if(check){\r\n            setCart([...cart, {...product, quantity: 1}])\r\n\r\n            await axios.patch('/user/addcart', {cart: [...cart, {...product, quantity: 1}]}, {\r\n                headers: {Authorization: token}\r\n            })\r\n\r\n        }else{\r\n            alert(\"This product has been added to cart.\")\r\n        }\r\n    }\r\n\r\n    return {\r\n        isLogged: [isLogged, setIsLogged],\r\n        isAdmin: [isAdmin, setIsAdmin],\r\n        cart: [cart, setCart],\r\n        addCart: addCart,\r\n        history: [history, setHistory]\r\n    }\r\n}\r\n*/\r\n}\r\nexport default UserAPI\r\n "]},"metadata":{},"sourceType":"module"}