[{"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\index.js":"1","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\App.js":"2","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\GlobalState.js":"3","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\Pages.js":"4","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\headers\\Header.js":"5","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\auth\\Register.js":"6","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\products\\Products.js":"7","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\auth\\Login.js":"8","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\api\\ProductsAPI.js":"9","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\categories\\Categories.js":"10","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\history\\OrderHistory.js":"11","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\createProduct\\CreateProduct.js":"12","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\api\\UserAPI.js":"13","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\api\\CategoriesAPI.js":"14","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\history\\OrderDetails.js":"15","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\utils\\not_found\\NotFound.js":"16","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\cart\\Cart.js":"17","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\detailProduct\\DetailProduct.js":"18","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\utils\\productItem\\ProductItem.js":"19","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\products\\LoadMore.js":"20","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\utils\\loading\\Loading.js":"21","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\products\\Filters.js":"22","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\utils\\productItem\\BtnRender.js":"23"},{"size":173,"mtime":1629271975049,"results":"24","hashOfConfig":"25"},{"size":428,"mtime":1631905439693,"results":"26","hashOfConfig":"25"},{"size":1212,"mtime":1629867322980,"results":"27","hashOfConfig":"25"},{"size":1817,"mtime":1629956849882,"results":"28","hashOfConfig":"25"},{"size":2281,"mtime":1629959161499,"results":"29","hashOfConfig":"25"},{"size":3044,"mtime":1629866847260,"results":"30","hashOfConfig":"25"},{"size":2778,"mtime":1629956814949,"results":"31","hashOfConfig":"25"},{"size":1364,"mtime":1629866815702,"results":"32","hashOfConfig":"25"},{"size":1208,"mtime":1629922619483,"results":"33","hashOfConfig":"25"},{"size":2743,"mtime":1629843279044,"results":"34","hashOfConfig":"25"},{"size":1993,"mtime":1629700045110,"results":"35","hashOfConfig":"25"},{"size":6627,"mtime":1629962722736,"results":"36","hashOfConfig":"25"},{"size":1477,"mtime":1629972707848,"results":"37","hashOfConfig":"25"},{"size":567,"mtime":1629728101315,"results":"38","hashOfConfig":"25"},{"size":2341,"mtime":1629700151719,"results":"39","hashOfConfig":"25"},{"size":298,"mtime":1629707821807,"results":"40","hashOfConfig":"25"},{"size":5125,"mtime":1629962616307,"results":"41","hashOfConfig":"25"},{"size":2056,"mtime":1629972806808,"results":"42","hashOfConfig":"25"},{"size":902,"mtime":1629958018924,"results":"43","hashOfConfig":"25"},{"size":512,"mtime":1629920026732,"results":"44","hashOfConfig":"25"},{"size":811,"mtime":1629503785815,"results":"45","hashOfConfig":"25"},{"size":1893,"mtime":1629958048753,"results":"46","hashOfConfig":"25"},{"size":1066,"mtime":1629962903878,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fhtcjk",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\index.js",[],"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\App.js",[],"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\GlobalState.js",[],"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\Pages.js",[],"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\headers\\Header.js",[],"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\auth\\Register.js",[],"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\products\\Products.js",[],"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\auth\\Login.js",[],"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\api\\ProductsAPI.js",[],"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\categories\\Categories.js",[],"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\history\\OrderHistory.js",[],"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\createProduct\\CreateProduct.js",["96","97"],"import React, {useState, useContext, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport Loading from '../utils/loading/Loading'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\n\r\nconst initialState = {\r\n    product_id: '',\r\n    title: '',\r\n    price: 0,\r\n    description: 'Type your movie description here',\r\n    content: 'Type you movie content here',\r\n    category: '',\r\n    _id:''\r\n  \r\n}\r\nfunction CreateProduct() {\r\n    const state = useContext(GlobalState)\r\n    const [product, setProduct] = useState(initialState)\r\n    const [categories] = state.categoriesAPI.categories\r\n    const [images, setImages] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [isAdmin] =state.userAPI.isAdmin\r\n    const [token] = state.token\r\n\r\n    const history = useHistory()\r\n    const param = useParams()\r\n    \r\n    const [products, setProducts] = state.productsAPI.products\r\n    const [onEdit, setOnEdit] =useState(false)\r\n    const [callback, setCallback] = state.productsAPI.callback\r\n\r\n\r\n    useEffect(() => {\r\n        if(param.id){\r\n            setOnEdit(true)\r\n            products.forEach(product => {\r\n                if(product._id === param.id){\r\n                    setProduct(product)\r\n                    setImages(product.images)\r\n                } \r\n            })\r\n            setOnEdit(true)\r\n        }else{setProduct(initialState)\r\n        setImages(false)\r\n        setProduct(initialState)\r\n        setImages(false)\r\n    }\r\n    }, [param.id, products])\r\n       \r\n\r\n    const handleUpload = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            if(!isAdmin) return alert(\"You are not an artist.\")\r\n            const file = e.target.files[0]\r\n\r\n            if(!file) return alert(\"File not exist.\")\r\n\r\n            if(!file.size > 2048*2048)\r\n             return alert(\"Size too large\")\r\n\r\n             if(file.type !== 'image/jpeg'  && file.type !== 'image/png') \r\n             return alert(\"File format is incorrect\")\r\n\r\n             let formData = new FormData()\r\n             formData.append('file' , file)\r\n\r\n             setLoading(true)\r\n             const res = await axios.post('/api/upload', formData, {\r\n                 headers: {'content-type': 'multipart/form-data', Authorization: token}\r\n             })\r\n           setLoading(false)\r\n           setImages(res.data)\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n    const handleDestroy= async e =>{\r\n        try {\r\n            if(!isAdmin) return alert(\"You are not an artist\")\r\n            await axios.post('/api/destroy', {public_id: images.public_id}, {\r\n                headers: {Authorization: token }\r\n            })\r\n            setLoading(false)\r\n            setImages(false)\r\n        } catch (err) {\r\n            alert(err.response.data.msg)\r\n        }\r\n    }\r\n   const handleChangeInput = e =>{\r\n       const{name, value} = e.target\r\n       setProduct({...product, [name]:value})\r\n}\r\nconst handleSubmit =async  e =>{\r\n    e.preventDefault()\r\n    try {\r\n        if(!isAdmin) return alert(\"You are not an admin\")\r\n        if(!images) return alert (\"No image upload\")\r\n\r\n        if(onEdit){\r\n            await axios.put(`/api/products/${product._id}`, {...product, images}, {\r\n                headers: {Authorization: token}\r\n                \r\n        })\r\n    }else{\r\n        await axios.post('/api/products', {...product, images}, {\r\n            headers: {Authorization: token}\r\n       })\r\n        \r\n        }\r\n        setCallback(!callback)\r\n       // setImages(false)\r\n       // setProduct(initialState)\r\n        history.push(\"/\")\r\n\r\n        {\r\n            alert(\"Successfully\") \r\n        }\r\n    } catch (err) {\r\n        alert(err.response.data.mag)\r\n    }\r\n}\r\n    const styleUpload ={\r\n        display: images ? \"block\" : \"none\"\r\n    }\r\n    return (\r\n        <div className=\"create_product\">\r\n        <div className=\"upload\">\r\n            <input type=\"file\" name=\"file\" id=\"file_up\" onChange ={handleUpload}/>\r\n          {\r\n              loading ? <div id=\"file_img\"><Loading /></div>\r\n          \r\n          :<div id=\"file_img\" style={styleUpload}>\r\n                    <img src={images ? images.url : ''} alt=\"\" />\r\n                    <span onClick={handleDestroy}>X</span>\r\n           </div>\r\n           }\r\n           </div>\r\n\r\n        <form onSubmit = {handleSubmit}>\r\n            <div className=\"row\">\r\n                <label htmlFor=\"product_id\">Movie ID</label>\r\n                <input type=\"text\" name=\"product_id\" id=\"product_id\" required\r\n                value={product.product_id} onChange ={handleChangeInput} disabled={product._id} />\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <label htmlFor=\"title\">Movie Title</label>\r\n                <input type=\"text\" name=\"title\" id=\"title\" required\r\n                value={product.title} onChange ={handleChangeInput}/>\r\n            </div>\r\n            \r\n\r\n            <div className=\"row\">\r\n                <label htmlFor=\"price\">Viewers</label>\r\n                <input type=\"number\" name=\"price\" id=\"price\" required\r\n                value={product.price} onChange ={handleChangeInput}/>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea type=\"text\" name=\"description\" id=\"description\" required\r\n                value={product.description} rows=\"5\"  onChange ={handleChangeInput}/>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <label htmlFor=\"content\">Content</label>\r\n                <textarea type=\"text\" name=\"content\" id=\"content\" required\r\n                value={product.content} rows=\"7\" onChange ={handleChangeInput}/>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <label htmlFor=\"categories\">Genre: </label>\r\n                <select name=\"category\" value={product.category} onChange ={handleChangeInput} >\r\n                    <option value=\"\">Please select a Genre</option>\r\n                    {\r\n                        categories.map(category => (\r\n                            <option value={category._id} key={category._id}>\r\n                                {category.name}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n \r\n            </div>\r\n            <button type =\"submit\">{onEdit? \"update\": \"Create\"}</button>\r\n                </form>\r\n                <div>\r\n\r\n                </div>\r\n            </div>\r\n           \r\n\r\n    )\r\n}\r\n\r\nexport default CreateProduct\r\n","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\api\\UserAPI.js",[],"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\api\\CategoriesAPI.js",[],"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\history\\OrderDetails.js",[],"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\utils\\not_found\\NotFound.js",[],"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\cart\\Cart.js",["98","99"],"/*import React, {useContext, useState} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Cart() {\r\n    const state = useContext(GlobalState)\r\n    const[cart] = state.userAPI.cart\r\n    const[total, setTotal] = useState(0)\r\n\r\n    if(cart.length === 0)\r\n    return <h2 style = {{textAlign: \"center\", fontSize : \"5rem\"}}>Favourites Empty</h2>\r\n    return (\r\n        <div>\r\n          {\r\n              cart.map(product => ( \r\n              <div className=\"detail cart\">\r\n              <img src={product.images.url} alt=\"\"/>\r\n              \r\n              <div className= \"box-detail\">\r\n                   <h2>{product.title}</h2>\r\n                <h3>$ {product.price * product.quantity}</h3>\r\n                      <p>{product.description}</p>\r\n                      <p>{product.content}</p>\r\n                     \r\n                      <div className=\"amount\">\r\n                           <button> - </button>\r\n                           <span>{product.quantity}</span>\r\n                           <button> + </button>\r\n                      </div>\r\n                   <div className=\"delete\">X</div>\r\n                       </div>\r\n                   </div>\r\n                   ))\r\n                }\r\n                <div className=\"total\">\r\n                <h3>Total: $ {total}</h3>\r\n                <Link to =\"#!\">Payment</Link>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Cart*/\r\nimport React, {useContext, useState, useEffect} from 'react'\r\nimport {GlobalState} from '../../../GlobalState'\r\nimport axios from 'axios'\r\n//import PaypalButton from './PaypalButton'\r\n\r\nfunction Cart() {\r\n    const state = useContext(GlobalState)\r\n    const [cart, setCart] = state.userAPI.cart\r\n    const [token] = state.token\r\n    const [total, setTotal] = useState(0)\r\n\r\n    useEffect(() =>{\r\n        const getTotal = () =>{\r\n            const total = cart.reduce((prev, item) => {\r\n                return prev + (item.price * item.quantity)\r\n            },0)\r\n\r\n            setTotal(total)\r\n        }\r\n\r\n        getTotal()\r\n\r\n    },[cart])\r\n\r\n    const addToCart = async (cart) =>{\r\n        await axios.patch('/user/addcart', {cart}, {\r\n            headers: {Authorization: token}\r\n        })\r\n    }\r\n\r\n\r\n    const increment = (id) =>{\r\n        cart.forEach(item => {\r\n            if(item._id === id){\r\n                item.quantity += 1\r\n            }\r\n        })\r\n\r\n        setCart([...cart])\r\n        addToCart(cart)\r\n    }\r\n\r\n    const decrement = (id) =>{\r\n        cart.forEach(item => {\r\n            if(item._id === id){\r\n                item.quantity === 1 ? item.quantity = 1 : item.quantity -= 1\r\n            }\r\n        })\r\n\r\n        setCart([...cart])\r\n        addToCart(cart)\r\n    }\r\n\r\n    const removeProduct = id =>{\r\n        if(window.confirm(\"Do you want to delete this Advertiusement?\")){\r\n            cart.forEach((item, index) => {\r\n                if(item._id === id){\r\n                    cart.splice(index, 1)\r\n                }\r\n            })\r\n\r\n            setCart([...cart])\r\n            addToCart(cart)\r\n        }\r\n    }\r\n\r\n    const tranSuccess = async(payment) => {\r\n        const {paymentID, address} = payment;\r\n\r\n        await axios.post('/api/payment', {cart, paymentID, address}, {\r\n            headers: {Authorization: token}\r\n        })\r\n\r\n        setCart([])\r\n        addToCart([])\r\n        alert(\"You have successfully placed an order.\")\r\n    }\r\n\r\n\r\n    if(cart.length === 0) \r\n        return <h2 style={{textAlign: \"center\", fontSize: \"5rem\"}}>Favourites Empty</h2> \r\n\r\n    return (\r\n        <div>\r\n            {\r\n                cart.map(product => (\r\n                    <div className=\"detail cart\" key={product._id}>\r\n                        <img src={product.images.url} alt=\"\" />\r\n\r\n                        <div className=\"box-detail\">\r\n                            <h2>{product.title}</h2>\r\n\r\n                            <h3> {product.price}Viewers</h3>\r\n                            <h3> {product.quantity}Like</h3>\r\n                            \r\n                            <p>{product.description}</p>\r\n                            <p>{product.content}</p>\r\n\r\n                            <div className=\"amount\">\r\n                                 <button onClick={() => decrement(product._id)}> UnLike </button>\r\n                                <span>{product.quantity}</span>\r\n                                 <button onClick={() => increment(product._id)}>Like </button>\r\n                            </div>\r\n                            \r\n                            <div className=\"delete\" \r\n                            onClick={() => removeProduct(product._id)}>\r\n                                X\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n\r\n           {/*<div className=\"total\">\r\n                <h3>Total: $ {total}</h3>\r\n                <PaypalButton\r\n                total={total}\r\n                tranSuccess={tranSuccess} />\r\n            </div>\r\n        */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n\r\n","D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\detailProduct\\DetailProduct.js",[],"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\utils\\productItem\\ProductItem.js",[],"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\products\\LoadMore.js",[],"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\utils\\loading\\Loading.js",[],"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\products\\Filters.js",[],"D:\\spm project\\currently editing one's\\e-commerce - Copy - from Sprint1 finished\\client\\src\\components\\mainpages\\utils\\productItem\\BtnRender.js",[],{"ruleId":"100","severity":1,"message":"101","line":30,"column":22,"nodeType":"102","messageId":"103","endLine":30,"endColumn":33},{"ruleId":"104","severity":1,"message":"105","line":118,"column":9,"nodeType":"106","messageId":"107","endLine":120,"endColumn":10},{"ruleId":"100","severity":1,"message":"108","line":52,"column":12,"nodeType":"102","messageId":"103","endLine":52,"endColumn":17},{"ruleId":"100","severity":1,"message":"109","line":109,"column":11,"nodeType":"102","messageId":"103","endLine":109,"endColumn":22},"no-unused-vars","'setProducts' is assigned a value but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'total' is assigned a value but never used.","'tranSuccess' is assigned a value but never used."]